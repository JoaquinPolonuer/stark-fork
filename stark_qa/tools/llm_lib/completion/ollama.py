import json
import time
from typing import Dict, List, Union

import requests


def complete_text_ollama(
    message: Union[str, List[Dict[str, str]]],
    model: str = "llama3.2",
    max_tokens: int = 2048,
    temperature: float = 1.0,
    max_retry: int = 1,
    sleep_time: int = 5,
    json_object: bool = False,
    base_url: str = "http://localhost:11434",
) -> str:
    """
    Call the Ollama API to complete a prompt.

    Args:
        message (Union[str, List[Dict[str, str]]]): The input message or a list of message dicts.
        model (str): The model to use for completion. Default is "llama3.2".
        max_tokens (int): Maximum number of tokens to generate. Default is 2048.
        temperature (float): Sampling temperature. Default is 1.0.
        max_retry (int): Maximum number of retries in case of an error. Default is 1.
        sleep_time (int): Sleep time between retries in seconds. Default is 5.
        json_object (bool): Whether to output in JSON format. Default is False.
        base_url (str): Base URL for Ollama API. Default is "http://localhost:11434".

    Returns:
        str: The completed text generated by the Ollama model.

    Raises:
        Exception: If the completion fails after the maximum number of retries.
    """
    if isinstance(message, str):
        if json_object and "json" not in message.lower():
            message = "You are a helpful assistant designed to output JSON. " + message
        messages = [{"role": "user", "content": message}]
    else:
        messages = message

    url = f"{base_url}/api/chat"

    payload = {
        "model": model,
        "messages": messages,
        "stream": False,
        "options": {"temperature": temperature, "num_predict": max_tokens},
    }

    if json_object:
        payload["format"] = "json"

    for cnt in range(max_retry):
        try:
            response = requests.post(url, json=payload, timeout=300)
            response.raise_for_status()

            result = response.json()
            return result["message"]["content"]

        except requests.exceptions.RequestException as e:
            print(
                f"Attempt {cnt + 1} failed: {e}. Retrying after {sleep_time} seconds..."
            )
            time.sleep(sleep_time)
        except KeyError as e:
            print(
                f"Attempt {cnt + 1} failed: Invalid response format - {e}. Retrying after {sleep_time} seconds..."
            )
            time.sleep(sleep_time)
        except Exception as e:
            print(
                f"Attempt {cnt + 1} failed: {e}. Retrying after {sleep_time} seconds..."
            )
            time.sleep(sleep_time)

    raise Exception("Failed to complete text with Ollama after maximum retries")
